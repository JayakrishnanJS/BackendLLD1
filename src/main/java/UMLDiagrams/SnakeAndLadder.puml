Design a class diagram for the traditional game of Snake and Ladder with the following requirements:

 Board: A standard Snake and Ladder board contains 100 cells numbered from 1 to 100.
 Players: The game can be played by 2-4 players.
 Dice: The game will have a standard dice that can roll numbers between 1 to 6.
 Snakes: Snakes will have a start point (mouth) and an endpoint (tail).
         If a player lands on the mouth, they are taken down to the tail.
 Ladders: Ladders will have a start point (bottom) and an endpoint (top).
          If a player lands on the bottom, they climb up to the top.
 Turns: Players take turns in a round-robin fashion to roll the dice and move.
 Winning Condition: A player wins if they land on the 100th cell exactly. For example,
                    if a player is on the 99th cell, they must roll a 1 to win.
@startuml
'https://plantuml.com/class-diagram

class Game{
    -board: Board
    -players: List<Player>
    -dice: Dice
    -currentPlayer: int
    +start(): void
    +playTurn(): void
    +checkWin(p: Player): boolean
}

class Board{
    -cells: Map<int, Cell>
    -snakes: List<Snake>
    -ladders: List<Ladder>
        + getCell(pos: int): Cell
        + getDestination(pos: int): int
}

class Cell{
    -number: int
    +Cell(number: int)
}

class Player{
    -name: String
    -position: int
    +move(steps: int): void
}

class Dice{
    +roll(): int
}

class Snake{
    -mouth: int
    -tail: int
}

class Ladder{
    -bottom: int
    -top: int
}

' Relationships & Cardinality
Game       "1" *-- "1"    Board       : board
Game       "1" *-- "1"    Dice        : dice
Game       "1" *-- "2..4" Player      : players

Board      "1" *-- "100"  Cell        : cells
Board      "1" *-- "*"    Snake       : snakes
Board      "1" *-- "*"    Ladder      : ladders

' dependency
Board --> Snake : owns >
Board --> Ladder: owns >

@enduml